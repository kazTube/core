{"version":3,"file":"mat-progress-buttons.es5.js","sources":["../../tmp/module/component/spinner-button.component.ts","../../tmp/module/component/bar-button.component.ts","../../tmp/module/mat-progress-buttons.module.ts"],"sourcesContent":["import { Component, Input } from '@angular/core';\nimport { MatProgressButtonOptions } from '../mat-progress-buttons.interface';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'mat-spinner-button',\n  template: `\n    <button mat-button\n      [type]=\"options.type\"\n      [color]=\"options.buttonColor\"\n      [class.active]=\"options.active\"\n      [class.fullWidth]=\"options.fullWidth\"\n      [class.mat-raised-button]=\"options.raised\"\n      [class.mat-stroked-button]=\"options.stroked\"\n      [class.mat-flat-button]=\"options.flat\"\n      [class.mat-fab]=\"options.fab\"\n      [disabled]=\"options.disabled\">\n\n      <span\n        class=\"button-text\"\n        *ngIf=\"!options.fab\"\n        [class.active]=\"options.active\">\n          {{ options.text }}\n      </span>\n\n      <ng-container \n        *ngIf=\"options.fab && options.icon\">\n        <mat-icon>{{ options.icon }}</mat-icon>\n      </ng-container>\n  \n      <mat-spinner class=\"spinner\"\n        [diameter]=\"options.fab ? '58' : options.spinnerSize\"\n        [color]=\"options.spinnerColor\"\n        [mode]=\"options.mode\"\n        [value]=\"options.value\"\n        [class.active]=\"options.active\">\n      </mat-spinner>\n    </button>\n  `,\n  styles: [`\n    :host button{outline:none}:host button.active{cursor:not-allowed}:host button/deep/ .mat-button-wrapper{display:flex;align-items:center;justify-content:center}:host button.fullWidth{width:100%}:host button.mat-fab .spinner{margin-top:-15px}:host button .spinner{position:absolute;top:25%;opacity:0;transition:opacity .3s ease-in-out}:host button .spinner.active{opacity:1}:host button .button-text{opacity:1;transition:opacity .3s ease-in-out}:host button .button-text.active{opacity:0}\n  `]\n})\nexport class MatSpinnerButtonComponent {\n  @Input() options: MatProgressButtonOptions;\n}\n","import { Component, Input } from '@angular/core';\nimport { MatProgressButtonOptions } from '../mat-progress-buttons.interface';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'mat-bar-button',\n  template: `\n    <button mat-button\n      [type]=\"options.type\"\n      [color]=\"options.buttonColor\"\n      [class.active]=\"options.active\"\n      [class.mat-raised-button]=\"options.raised\"\n      [class.mat-stroked-button]=\"options.stroked\"\n      [class.mat-flat-button]=\"options.flat\"\n      [disabled]=\"options.active || options.disabled\">\n\n      <span>{{ options.text }}</span>\n\n      <mat-progress-bar\n        class=\"bar\"\n        *ngIf=\"options.active && !options.disabled\"\n        [color]=\"options.barColor\"\n        [mode]=\"options.mode\"\n        [value]=\"options.value\">\n      </mat-progress-bar>\n    </button>\n  `,\n  styles: [`\n    :host button.active{cursor:not-allowed}:host button .bar{position:absolute;top:0;left:0}\n  `]\n})\nexport class MatBarButtonComponent {\n  @Input() options: MatProgressButtonOptions;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { MatSpinnerButtonComponent } from './component/spinner-button.component';\nimport { MatBarButtonComponent } from './component/bar-button.component';\n\nimport {\n  MatButtonModule,\n  MatProgressBarModule,\n  MatProgressSpinnerModule,\n  MatRippleModule,\n  MatIconModule,\n} from '@angular/material';\n\n// Export module's public API\nexport { MatSpinnerButtonComponent } from './component/spinner-button.component';\nexport { MatBarButtonComponent } from './component/bar-button.component';\nexport { MatProgressButtonOptions } from './mat-progress-buttons.interface';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatButtonModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRippleModule,\n    MatIconModule\n  ],\n  exports: [\n    MatSpinnerButtonComponent,\n    MatBarButtonComponent\n  ],\n  declarations: [\n    MatSpinnerButtonComponent,\n    MatBarButtonComponent\n  ]\n})\nexport class MatProgressButtonsModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: MatProgressButtonsModule\n    };\n  }\n}\n"],"names":[],"mappings":";;;;;;;;AAAA;IAGA;KA0CC;;gBA1CA,SAAS,SAAC;;oBAET,QAAQ,EAAE,oBAAoB;oBAC9B,QAAQ,EAAE,sgCAgCT;oBACD,MAAM,EAAE,CAAC,kfAER,CAAC;iBACH;;;0BAEE,KAAK;;IACR,gCAAC;CAAA;;;;;;AC7CD;IAGA;KA8BC;;gBA9BA,SAAS,SAAC;;oBAET,QAAQ,EAAE,gBAAgB;oBAC1B,QAAQ,EAAE,woBAoBT;oBACD,MAAM,EAAE,CAAC,oGAER,CAAC;iBACH;;;0BAEE,KAAK;;IACR,4BAAC;CAAA;;;;;;ACjCD;IAmBA;KAwBC;;;;IALQ,gCAAO;;;IAAd;QACE,OAAO;YACL,QAAQ,EAAE,wBAAwB;SACnC,CAAC;KACH;;gBAvBF,QAAQ,SAAC;oBACR,OAAO,EAAE;wBACP,YAAY;wBACZ,eAAe;wBACf,oBAAoB;wBACpB,wBAAwB;wBACxB,eAAe;wBACf,aAAa;qBACd;oBACD,OAAO,EAAE;wBACP,yBAAyB;wBACzB,qBAAqB;qBACtB;oBACD,YAAY,EAAE;wBACZ,yBAAyB;wBACzB,qBAAqB;qBACtB;iBACF;;IAOD,+BAAC;CAAA;;;;;;;;;;;;;;"}